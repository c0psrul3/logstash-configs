#/*  vim: set filetype=config:  */
#
# Conditionals
# ------------
##  Is it more efficient to do two boolean comparisons

if [useragent][name] == "Opera" or [useragent][name] == "Chrome" {
     drop {}
}
#
##  or a compact regular expression?
#
if [useragent][name] =~ /^(?:Opera|Chrome)$/ {
      drop {}
}



#
# Conditional before grok or not
# ------------------------------
##  From the syslog logs I have on my machine I am interested (who knows why…) in capturing the IP address and renewal time from this dhclient line:
#
##  Sep  9 07:50:43 es-rclarke dhclient: bound to 10.10.10.89 -- renewal in 426936 seconds.
# 
##  In my sample file, dhclient entries make up only 3% of all the log entries, and the renewal entries make only 8% of those…
#
##  The lazy way to write it would be:
#
filter {
  grok {
    match => {
      "message" => "%{SYSLOGLINE}"
    }
    overwrite => [ "message" ]
  }
  grok {
    match => {
      "message" => "bound to %{IPV4:[dhclient][address]} -- renewal in %{INT:[dhclient][renewal]:int} seconds."
    }
    tag_on_failure => []
  }
}
#
##  but how much performance would it bring to only grok on the dhclient messages?
#
filter {
  grok {
    match => {
      "message" => "%{SYSLOGLINE}"
    }
    overwrite => [ "message" ]
  }
  if [program] == "dhclient" {
    grok {
      match => {
        "message" => "bound to %{IPV4:[dhclient][address]} -- renewal in %{INT:[dhclient][renewal]:int} seconds."
      }
      tag_on_failure => []
    }
  }
}

